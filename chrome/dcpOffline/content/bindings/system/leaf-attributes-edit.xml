<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE bindings [
      <!ENTITY % leaf-attributes-bindingDTD SYSTEM "chrome://dcpoffline/locale/leaf-attributes-binding.dtd" >
      <!ENTITY separator "&#160;:&#160;" >
      <!ENTITY systemBindingsDirPath "chrome://dcpoffline/content/bindings/system" >
      %leaf-attributes-bindingDTD;
]>

<bindings id="leaf-attributes-binding"
    xmlns="http://www.mozilla.org/xbl"
    xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
    xmlns:xbl="http://www.mozilla.org/xbl">
    
    <binding id="leaf-attr-edit" extends="&systemBindingsDirPath;/leaf-attributes-view.xml#leaf-attr-view">
        <implementation>
            
            <field name="inputField"><![CDATA[
                this.getChild('displayValue').inputField;
            ]]></field>
            
            <method name="setCustomValidity">
                <parameter name="message"/>
                <body><![CDATA[
                    this.inputField.setCustomValidity(message);
                    if(message){
                        alert ("(FIXME) " + message);
                        this.inputField.focus();
                        //XXX: selectAll should be better
                    }
                ]]></body>
            </method>
            
            <constructor><![CDATA[
                var visibility = this.getAttribute('visibility');
                if( visibility == 'S' ){
                    this.setAttribute('disabled', true);
                } else if( visibility == 'W' || visibility == 'O' ){
                    this.removeAttribute('disabled', false);
                } else {
                    this.setAttribute('collapsed', true);
                }
            ]]></constructor>
            
        </implementation>
        
        <handlers>
            <handler event="blur" id="blur"><![CDATA[
                Components.utils.import("resource://modules/logger.jsm");
                logConsole("initial blur handler");
                if(event.originalTarget == this.inputField){
                    this.setValue(this.inputField.value);
                }
            ]]></handler>
        </handlers>
    </binding>
    
    <!-- Text attributes -->
    
    <binding id="text-attr-edit" extends="&systemBindingsDirPath;/leaf-attributes-edit.xml#leaf-attr-edit">
        <content>
            <xul:hbox xbl:inherits="attrid,collapsed" flex="1" class="dcpAttribute text">
                <xul:label anonid="label" class="dcpLabel" xbl:inherits="value=label"/>
                <xul:label anonid="separator" class="dcpSeparator" value="&separator;"/>
                <xul:textbox anonid="displayValue" class="dcpValue" multiline="false" xbl:inherits="disabled"/>
            </xul:hbox>
        </content>
    </binding>
    
    <binding id="longtext-attr-edit" extends="&systemBindingsDirPath;/leaf-attributes-edit.xml#leaf-attr-edit">
        <content>
            <xul:hbox xbl:inherits="attrid,collapsed" flex="1" class="dcpAttribute longtext">
                <xul:label anonid="label" class="dcpLabel" xbl:inherits="value=label"/>
                <xul:label anonid="separator" class="dcpSeparator" value="&separator;"/>
                <xul:textbox anonid="displayValue" class="dcpValue" multiline="true" xbl:inherits="disabled"/>
            </xul:hbox>
        </content>
    </binding>
    
    <binding id="htmltext-attr-edit" extends="&systemBindingsDirPath;/leaf-attributes-view.xml#leaf-attr-view">
        <content>
            <xul:vbox xbl:inherits="attrid" flex="1" class="dcpAttribute longtext">
                <xul:hbox>
                    <xul:label anonid="label" class="dcpLabel" xbl:inherits="value=label"/>
                    <xul:label anonid="separator" class="dcpSeparator" value="&separator;"/>
                </xul:hbox>
                <xul:iframe anonid="displayValue" src="chrome://ckeditor/content/bindings/ckeditor/ckeditor.html" class="dcpValue" flex="1"/>

            </xul:vbox>
        </content>
        <implementation>
            <method name="reloadValue">
                <body><![CDATA[
                    var contentWindow = this.getChild('displayValue').contentWindow;
                    
                    var contentDocument = this.getChild('displayValue').contentDocument;
                    
                    var value = this.getValue();
                    
                    var initEditor = function(){
                        logConsole('initEditor');
                        
                        if(contentWindow.getEditorWrapper){
                            var editorWrapper = contentWindow.getEditorWrapper();
                            editorWrapper.innerHTML = value;
                            contentWindow.initEditor();
                        } else {
                            logConsole('relaunch initEditor in 50 ms');
                            setTimeout(initEditor,50);
                        }
                    }

                    setTimeout(initEditor,50);
                ]]></body>
            </method>
        </implementation>
    </binding>
    
    <!-- Numeric attributes -->
    
    <binding id="int-attr-edit" extends="&systemBindingsDirPath;/leaf-attributes-edit.xml#leaf-attr-edit">
        <content>
            <xul:hbox xbl:inherits="attrid,collapsed" flex="1" class="dcpAttribute numeric int">
                <xul:label anonid="label" class="dcpLabel" xbl:inherits="value=label"/>
                <xul:label anonid="separator" class="dcpSeparator" value="&separator;"/>
                <xul:textbox anonid="displayValue" class="dcpValue" xbl:inherits="disabled"/>
            </xul:hbox>
        </content>
        
        <implementation>
            <method name="checkValue">
                <parameter name="value"/>
                <body><![CDATA[
                    if( isNaN(value) ){
                        Components.utils.import("resource://modules/events.jsm");
                        this.setCustomValidity("'" + value +"' is not a number");
                        throw new attrCheckException("'" + value +"' is not a number");
                    } else {
                        this.setCustomValidity("");
                    }
                    
                    return value;
                ]]></body>
            </method>
        </implementation>
    </binding>
    
    <binding id="double-attr-edit" extends="&systemBindingsDirPath;/leaf-attributes-edit.xml#leaf-attr-edit">
        <content>
            <xul:hbox xbl:inherits="attrid" flex="1" class="dcpAttribute numeric double">
                <xul:label anonid="label" class="dcpLabel" xbl:inherits="value=label"/>
                <xul:label anonid="separator" class="dcpSeparator" value="&separator;"/>
                <xul:textbox anonid="displayValue" class="dcpValue" xbl:inherits="disabled"/>
            </xul:hbox>
        </content>
        
        <implementation>
            <method name="checkValue">
                <parameter name="value"/>
                <body><![CDATA[
                    //XXX: do a better sanitization (spaces, english format, etc...)
                    var parse_double = /^[0-9]+([.,][0-9]+)?$/
                    if( value.match(parse_double) ){
                        Components.utils.import("resource://modules/events.jsm");
                        this.setCustomValidity("'" + value +"' is not a number");
                        throw new attrCheckException("'" + value +"' is not a number");
                    }
                    return value;
                ]]></body>
            </method>
        </implementation>
    </binding>
    
    <binding id="money-attr-edit" extends="&systemBindingsDirPath;/leaf-attributes-edit.xml#leaf-attr-edit">
        <content>
            <xul:hbox xbl:inherits="attrid" flex="1" class="dcpAttribute numeric double">
                <xul:label anonid="label" class="dcpLabel" xbl:inherits="value=label"/>
                <xul:label anonid="separator" class="dcpSeparator" value="&separator;"/>
                <xul:textbox anonid="displayValue" class="dcpValue" value=""
                    type="number" hidespinbutton="true" decimalplaces="2"
                    inherited="min,max"/>
                <xul:textbox anonid="rawValue" value="" collapsed="true"/>
            </xul:hbox>
        </content>
    </binding>
    
    <!-- Date attributes -->
    
    <binding id="date-attr-edit" extends="&systemBindingsDirPath;/leaf-attributes-edit.xml#leaf-attr-edit">
        <content>
            <xul:hbox xbl:inherits="attrid" flex="1" class="dcpAttribute date">
                <xul:label anonid="label" class="dcpLabel" xbl:inherits="value=label"/>
                <xul:label anonid="separator" class="dcpSeparator" value="&separator;"/>
                <xul:datepicker anonid="displayValue" class="dcpValue" value=""/>
            </xul:hbox>
        </content>
    </binding>
    
</bindings>