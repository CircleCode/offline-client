<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE bindings [
      <!ENTITY % node-attributes-bindingDTD SYSTEM "chrome://dcpoffline/locale/bindings/node-attributes-binding.dtd" >
      <!ENTITY systemBindingsDirPath "chrome://dcpoffline/content/bindings/system" >
      <!ENTITY separator "&#160;:&#160;" >
      %node-attributes-bindingDTD;
]>
<bindings id="node-attributes-binding" xmlns="http://www.mozilla.org/xbl" xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
    xmlns:xbl="http://www.mozilla.org/xbl"
>
    <binding id="node-attr-view" extends="&systemBindingsDirPath;/base-attributes.xml#base-attr" />
    <binding id="tab-attr-view" extends="&systemBindingsDirPath;/node-attributes-view.xml#node-attr-view">
        <content>
            <xul:tabpanel anonid="tabPanel" flex="1">
                <xul:vbox flex="1">
                    <xbl:children />
                </xul:vbox>
            </xul:tabpanel>
        </content>
        <implementation>
            <field name="tabbox" readonly="true"><![CDATA[
                var parent = this.parentNode;
                while (parent) {
                    if (parent.localName == "tabbox")
                        break;
                    parent = parent.parentNode;
                }
                parent;
            ]]></field>
            <constructor><![CDATA[
                if (this.tabbox) {
                var tabs = this.tabbox.tabs;
                
                var id = Components.classes["@mozilla.org/uuid-generator;1"]
                        .getService(Components.interfaces.nsIUUIDGenerator)
                        .generateUUID()
                        .toString()
                        .slice(1,-1);
                this.setAttribute('id', id);
                
                if (tabs) {                   
                   // be carreful : constructors are called in inverse order of dom order
                   var tab = tabs.insertItemAt(0,this.getAttribute('label'),this.getAttribute('label'));
                   tab.setAttribute('linkedpanel', id);
                } else {
                    Components.utils.import("resource://modules/exceptions.jsm");
                    logError(new BindError("there is no 'tabs' tag associated with this tab: " + this.getAttribute("attrid")));
                }
                }
            ]]></constructor>
        </implementation>
    </binding>
    <binding id="frame-attr-view" extends="&systemBindingsDirPath;/node-attributes-view.xml#node-attr-view">
        <content>
            <xul:groupbox class="dcpFrame" flex="1">
                <xul:caption anonid="label" class="dcpLabel" xbl:inherits="label" />
                <children />
            </xul:groupbox>
        </content>
    </binding>
    <binding id="array-attr-view" inheritstyle="true" extends="&systemBindingsDirPath;/node-attributes-view.xml#node-attr-view">
        <resources>
            <stylesheet src="chrome://dcpoffline/content/bindings/system/dcpoffline-array-system.css" />
        </resources>
        <content>
            <xul:groupbox class="dcpAttribute array" flex="1">
                <xul:caption anonid="caption" xbl:inherits="label"/>
                <xul:grid flex="1" inherited="attrid">
                    <xul:columns anonid="columns"/>
                    <xul:rows anonid="rows"/>
                </xul:grid>
            </xul:groupbox>
            <xul:box style="display: none;">
                <children/>
            </xul:box>
        </content>
        <implementation>
            <constructor><![CDATA[
                Components.utils.import("resource://modules/logger.jsm");
                
                var tbody=this.getChild('tableBody');
                var cn=this.childNodes; // these should be the attributes(ie: the columns)
                
                for(var i = 0; i < cn.length; i++){
                     var currentColumn = document.createElementNS("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul", "column");
                     var columnFlex = cn[i].getAttribute('flex');
                     currentColumn.setAttribute('flex', columnFlex?columnFlex:1);
                     
                    var clabel = document.createElementNS("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul", "label");
                    clabel.setAttribute('value', cn[i].getAttribute('label'));
                    clabel.classList.add('header');
                    clabel.classList.add('plain');
                    currentColumn.appendChild(clabel);
                    
                   
                    var values=this.doc.getValue(cn[i].getAttribute('attrid'));
                    var nbRow=values.length;
                    for (var r=0;r<nbRow; r++) {
                        var currentAttribute = cn[i].cloneNode(true);
                        //currentAttribute.classList.add('body');
                        currentAttribute.setAttribute('index', r);
                        
                        currentColumn.appendChild(currentAttribute);
                    }
                    this.getChild('columns').appendChild(currentColumn);
                }
                
            ]]></constructor>
        </implementation>
    </binding>
    <binding id="array-attr-header" extends="&systemBindingsDirPath;/node-attributes-view.xml#node-attr-view">
        <content>
            <xul:column flex="1">
                <xul:label class="dcpLabel" xbl:inherits="value=label" />
            </xul:column>
        </content>
        <implementation></implementation>
    </binding>
    <binding id="array-attr-body" extends="&systemBindingsDirPath;/node-attributes-view.xml#node-attr-view">
        <content>
            BODY NO USE
            <xul:label class="dcpLabel" xbl:inherits="value=label" />
        </content>
        <implementation></implementation>
    </binding>
</bindings>