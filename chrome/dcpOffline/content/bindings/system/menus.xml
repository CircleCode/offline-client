<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE bindings [
      <!ENTITY % menu-bindingDTD SYSTEM "chrome://dcpoffline/locale/bindings/menu-binding.dtd" >
      <!ENTITY separator "&#160;:&#160;" >
      <!ENTITY systemBindingsDirPath "chrome://dcpoffline/content/bindings/system" >
      %menu-bindingDTD;
]>

<bindings id="menuBindings"
    xmlns="http://www.mozilla.org/xbl"
    xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
    xmlns:xbl="http://www.mozilla.org/xbl">
    
    <binding id="doc-main-menu">
        <!--<ressources/>-->
        
        <content>
            <xul:toolbox id="document-toolbox" flex="1">
                <xul:toolbar anonid="document-toolbar" flex="1">
                
                    <xul:toolbarbutton anonid="document-toolbar-system-save"
                        label="&document.toolbar.button.save;"
                        tooltiptext="&document.toolbar.button.save.tooltip;"
                        icon="save"
                        mode="edit">
                    </xul:toolbarbutton>
                    
                    <xul:toolbarbutton anonid="document-toolbar-system-cancel"
                        label="&document.toolbar.button.cancel;"
                        tooltiptext="&document.toolbar.button.cancel.tooltip;"
                        icon="cancel"
                        mode="edit"
                        oncommand="alert('(FIXME) do cancel');">
                    </xul:toolbarbutton>
                    
                    <xul:toolbarbutton
                        anonid="document-toolbar-system-edit"
                        label="&document.toolbar.button.modify;"
                        tooltiptext="&document.toolbar.button.modify.tooltip;"
                        mode="view">
                    </xul:toolbarbutton>
                    
                    <xul:spacer flex="1"/>
                    
                    <children/>
                    
                    <xul:toolbarbutton
                        anonid="document-menu-advanced"
                        type="menu"
                        label="&document.toolbar.button.advanced;"
                        tooltiptext="&document.toolbar.button.advanced.tooltip;">
                        <xul:menupopup>
                            <xul:menuitem
                                anonid="document-toolbar-system-properties"
                                label="&document.toolbar.button.properties;"
                                tooltiptext="&document.toolbar.button.properties.tooltip;"
                                icon="properties"
                                oncommand="alert('(FIXME) open properties');">
                            </xul:menuitem>
                            <xul:menuseparator/>
                            <xul:menuitem
                                anonid="document-toolbar-system-revert"
                                label="&document.toolbar.button.revert;"
                                tooltiptext="&document.toolbar.button.revert.tooltip;"
                                icon="clear" collapsed="true">
                            </xul:menuitem>
                            <xul:menuitem
                                anonid="document-toolbar-system-remove"
                                label="&document.toolbar.button.remove;"
                                tooltiptext="&document.toolbar.button.remove.tooltip;"
                                icon="remove" collapsed="true">
                            </xul:menuitem>
                        </xul:menupopup>
                    </xul:toolbarbutton>
                    
                    
                    
                    <xul:toolbarbutton
                        anonid="document-toolbar-system-close"
                        label="&document.toolbar.button.close;"
                        tooltiptext="&document.toolbar.button.close.tooltip;"
                        icon="close">
                    </xul:toolbarbutton>
                
                </xul:toolbar>
            </xul:toolbox>
        </content>
        
        <implementation>
            
            
            <field name="documentNode" readonly="true"><![CDATA[
                var parent = this.parentNode;
                while (parent) {
                    if (parent.localName == "dcpDocument")
                        break;
                    parent = parent.parentNode;
                }
                parent;
            ]]></field>
            
            <property
                name="localDocument"
                readonly="true"
                onget="return this.doc;">
            </property>
            
            <method name="getChild">
                <parameter name="aChildName"/>
                <body><![CDATA[
                      return document.getAnonymousElementByAttribute(this, "anonid", aChildName);
                ]]></body>
            </method>
            
            <constructor><![CDATA[
            
                this.doc = this.documentNode.localDocument;
                
                var mode = documentNode.mode;
                
                var children = this.getChild("document-toolbar").children;
                if (children)
                {
                    for (var i = 0; i < children.length; i++)
                    {
                        var childMode = children[i].getAttribute('mode');
                        if (childMode){
                            if(childMode == mode) {
                                children[i].collapsed = false;
                            } else {
                                children[i].collapsed = true;
                            }
                        }
                    }
                }
                
                if (mode == 'view' ) {
                   var bremove=this.getChild("document-toolbar-system-remove");
                   var brevert=this.getChild("document-toolbar-system-revert");
                   if (this.doc.isOnlyLocal()) {
                       if (bremove) {
                           bremove.collapsed=false;
                       }
                   } else {
                       if (brevert) {
                           brevert.collapsed=false;
                       }
                   }
                }
                
                if( (mode !== 'edit') && (!this.doc.canEdit()) ){
                
                    Components.utils.import("resource://modules/StringBundle.jsm");
                    var translate = new StringBundle("chrome://dcpoffline/locale/menu-binding.properties");
            
                    this.getChild('document-toolbar-system-edit').disabled = true;
                    this.getChild('document-toolbar-system-edit').tooltipText = translate.get("document.toolbar.button.modify.disabled.tooltip");
                }
            ]]></constructor>
        </implementation>
        
        <handlers>
            <handler event="click"  button="0"><![CDATA[
                switch(event.originalTarget){
                    case this.getChild('document-toolbar-system-edit') :
                        if(! this.getChild('document-toolbar-system-edit').disabled){
                            this.documentNode.switchMode('edit');
                        }
                        break;
                    case this.getChild('document-toolbar-system-close') :
                        this.documentNode.close();
                        break;
                    case this.getChild('document-toolbar-system-cancel') :
                        this.documentNode.reinit();
                        break;
                    case this.getChild('document-toolbar-system-save') :
                        this.documentNode.save();
                        break;
                    case this.getChild('document-toolbar-system-revert') :
                        this.documentNode.revert();
                        break;
                    case this.getChild('document-toolbar-system-remove') :
                        this.documentNode.remove();
                        break;
                }
            ]]></handler>
        </handlers>
    </binding>
    
</bindings>