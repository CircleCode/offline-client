<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE bindings [
      <!ENTITY % menu-bindingDTD SYSTEM "chrome://dcpoffline/locale/bindings/menu-binding.dtd" >
      <!ENTITY separator "&#160;:&#160;" >
      <!ENTITY systemBindingsDirPath "chrome://dcpoffline/content/bindings/system" >
      %menu-bindingDTD;
]>

<bindings id="menuBindings"
    xmlns="http://www.mozilla.org/xbl"
    xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
    xmlns:xbl="http://www.mozilla.org/xbl">
    
    <binding id="doc-main-menu">
        <!--<ressources/>-->
        
        <content>
            <xul:hbox anonid="document-toolbar" flex="1">
                
                <xul:button anonid="document-toolbar-system-save"
                    label="&document.toolbar.button.save;"
                    tooltiptext="&document.toolbar.button.save.tooltip;"
                    icon="save"
                    mode="edit">
                </xul:button>
                
                <xul:button anonid="document-toolbar-system-cancel"
                    label="&document.toolbar.button.cancel;"
                    tooltiptext="&document.toolbar.button.cancel.tooltip;"
                    icon="cancel"
                    mode="edit"
                    oncommand="alert('(FIXME) do cancel');">
                </xul:button>
                
                <xul:button
                    anonid="document-toolbar-system-edit"
                    label="&document.toolbar.button.modify;"
                    tooltiptext="&document.toolbar.button.modify.tooltip;"
                    mode="view">
                </xul:button>
                
                <xul:splitter anonid="document-toolbar-system-splitter"/>
                
                <xul:spacer flex="1"/>
                
                <children/>
                
                <xul:button
                    anonid="document-toolbar-system-properties"
                    label="&document.toolbar.button.properties;"
                    tooltiptext="&document.toolbar.button.properties.tooltip;"
                    icon="properties"
                    oncommand="alert('(FIXME) open properties');">
                </xul:button>
                
                <xul:splitter/>
                
                <xul:button
                    anonid="document-toolbar-system-close"
                    label="&document.toolbar.button.close;"
                    tooltiptext="&document.toolbar.button.close.tooltip;"
                    icon="close">
                </xul:button>
                
            </xul:hbox>
        </content>
        
        <implementation>
            
            
            <field name="documentNode" readonly="true"><![CDATA[
                var parent = this.parentNode;
                while (parent) {
                    if (parent.localName == "dcpDocument")
                        break;
                    parent = parent.parentNode;
                }
                parent;
            ]]></field>
            
            <property
                name="localDocument"
                readonly="true"
                onget="return this.doc;">
            </property>
            
            <method name="getChild">
                <parameter name="aChildName"/>
                <body><![CDATA[
                      return document.getAnonymousElementByAttribute(this, "anonid", aChildName);
                ]]></body>
            </method>
            
            <constructor><![CDATA[
            
                this.doc = this.documentNode.localDocument;
                
                var mode = documentNode.mode;
                
                var children = this.getChild("document-toolbar").children;
                if (children)
                {
                    for (var i = 0; i < children.length; i++)
                    {
                        var childMode = children[i].getAttribute('mode');
                        if (childMode){
                            if(childMode == mode) {
                                children[i].collapsed = false;
                            } else {
                                children[i].collapsed = true;
                            }
                        }
                    }
                }
                
                if( (mode !== 'edit') && (!this.doc.canEdit()) ){
                
                    Components.utils.import("resource://modules/StringBundle.jsm");
                    var translate = new StringBundle("chrome://dcpoffline/locale/menu-binding.properties");
            
                    this.getChild('document-toolbar-system-edit').disabled = true;
                    this.getChild('document-toolbar-system-edit').tooltipText = translate.get("document.toolbar.button.modify.disabled.tooltip");
                }
            ]]></constructor>
        </implementation>
        
        <handlers>
            <handler event="click"  button="0"><![CDATA[
                switch(event.originalTarget){
                    case this.getChild('document-toolbar-system-edit') :
                        if(! this.getChild('document-toolbar-system-edit').disabled){
                            this.documentNode.switchMode('edit');
                        }
                        break;
                    case this.getChild('document-toolbar-system-close') :
                        this.documentNode.close();
                        break;
                    case this.getChild('document-toolbar-system-cancel') :
                        this.documentNode.reinit();
                        break;
                    case this.getChild('document-toolbar-system-save') :
                        this.documentNode.save();
                        break;
                    default:
                        logConsole("pouet");
                }
            ]]></handler>
        </handlers>
    </binding>
    
</bindings>