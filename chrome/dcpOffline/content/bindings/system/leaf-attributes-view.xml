<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE bindings [
      <!ENTITY % leaf-attributes-bindingDTD SYSTEM "chrome://dcpoffline/locale/leaf-attributes-binding.dtd" >
      <!ENTITY separator "&#160;:&#160;" >
      <!ENTITY systemBindingsDirPath "chrome://dcpoffline/content/bindings/system" >
      %leaf-attributes-bindingDTD;
]>
<bindings id="leaf-attributes-binding" xmlns="http://www.mozilla.org/xbl" xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
    xmlns:xbl="http://www.mozilla.org/xbl" xmlns:html="http://www.w3.org/1999/xhtml"
>
    <binding id="leaf-attr-view" extends="&systemBindingsDirPath;/base-attributes.xml#base-attr">
        <implementation>
            <property name="value"
                onget="this.getValue();"
                onset="this.setValue(val);">
            </property>
            <property name="index"
                readonly="true">
                <getter><![CDATA[
                    if(this.hasAttribute('index')){
                        return this.getAttribute('index');
                    } else {
                        return -1;
                    }
                ]]></getter>
            </property>
            <method name="checkValue">
                <parameter name="value" />
                <body><![CDATA[
                    return value;
                ]]></body>
            </method>
            <method name="setValue">
                <parameter name="value" />
                <body><![CDATA[
                    try{
                        var value = this.checkValue(value);
                        this.doc.setValue(this.attrid, value);
                        this.reloadValue();
                        return true;
                    } catch(e){
                        Components.utils.import("resource://modules/logger.jsm");
                        logError(e);
                    }
                    return false;
                ]]></body>
            </method>
            <method name="reloadValue">
                <body><![CDATA[
                    var valueNode = this.getChild('displayValue');
                    if(valueNode){
                        valueNode.value = this.getValue();
                        if (valueNode.value == '') {
                            //valueNode.parentNode.style.display='none';
                        }
                    } else {
                       // Components.utils.import("resource://modules/exceptions.jsm");
                       // throw new BindException("no displayValue child for attr ["+ this.attrid + "] in doc ["+this.doc.initid + "]");
                    }
                ]]></body>
            </method>
            <method name="getValue">
                <body><![CDATA[
                    var index=this.getAttribute("index");
                    if ( index !== null) {
                       var val=this.doc.getValue(this.attrid);
                       if (Array.isArray(val)) {
                          return val[index];
                       } else {
                          return val;
                       }
                    } else {
                       return this.doc.getValue(this.attrid);
                    }
                ]]></body>
            </method>
            <constructor><![CDATA[
                this.reloadValue();/*
                var index=this.getAttribute("index");
                if ( index !== null) {
                    var label = this.getChild('label');
                    if (label) label.style.display='none';
                    var separator = this.getChild('separator');
                    if (separator) separator.style.display='none';
                    logConsole("delete label"+this.attrid+index);
                } 
                */
            ]]></constructor>
        </implementation>
    </binding>
    <!-- Text attributes -->
    <binding id="text-attr-view" extends="&systemBindingsDirPath;/leaf-attributes-view.xml#leaf-attr-view">
        <content>
            <xul:hbox xbl:inherits="attrid" flex="1" class="dcpAttribute text">
                <xul:label anonid="label" class="dcpLabel" xbl:inherits="value=label" />
                <xul:label anonid="separator" class="dcpSeparator" value="&separator;" />
                <xul:label anonid="displayValue" class="dcpValue" />
            </xul:hbox>
        </content>
    </binding>
    <binding id="longtext-attr-view" extends="&systemBindingsDirPath;/leaf-attributes-view.xml#leaf-attr-view">
        <content>
            <xul:hbox xbl:inherits="attrid" flex="1" class="dcpAttribute longtext">
                <xul:label anonid="label" class="dcpLabel" xbl:inherits="value=label" />
                <xul:label anonid="separator" class="dcpSeparator" value="&separator;" />
                <xul:textbox anonid="displayValue" class="dcpValue plain" multiline="true" style="white-space:pre-line;" />
            </xul:hbox>
        </content>
    </binding>
    <binding id="htmltext-attr-view" extends="&systemBindingsDirPath;/leaf-attributes-view.xml#leaf-attr-view">
        <content>
            <xul:hbox xbl:inherits="attrid" flex="1" class="dcpAttribute longtext">
                <xul:label anonid="label" class="dcpLabel" xbl:inherits="value=label" />
                <xul:label anonid="separator" class="dcpSeparator" value="&separator;" />
                <html:div anonid="displayValue" class="dcpValue" />
            </xul:hbox>
        </content>
        <implementation>
            <method name="reloadValue">
                <body><![CDATA[
                    var Cc = Components.classes;
                    var Ci = Components.interfaces;
                    
                    var valueNode = this.getChild('displayValue');
                    if(valueNode){
                        valueNode.appendChild(
                                Cc["@mozilla.org/feed-unescapehtml;1"]
                                        .getService(
                                                Ci.nsIScriptableUnescapeHTML)
                                        .parseFragment(this.getValue(),
                                                false,
                                                null,
                                                valueNode));
                    } else {
                        throw new BindingException("no displayValue chil for attr ["+ this.attrid + "] in doc ["+this.doc.initid + "]");
                    }
                ]]></body>
            </method>
        </implementation>
    </binding>
    <!-- Numeric attributes -->
    <binding id="int-attr-view" extends="&systemBindingsDirPath;/leaf-attributes-view.xml#leaf-attr-view">
        <content>
            <xul:hbox xbl:inherits="attrid" flex="1" class="dcpAttribute int">
                <xul:label anonid="label" class="dcpLabel" xbl:inherits="value=label" />
                <xul:label anonid="separator" class="dcpSeparator" value="&separator;" />
                <xul:textbox anonid="displayValue" class="dcpValue plain" />
            </xul:hbox>
        </content>
    </binding>
    <binding id="double-attr-view" extends="&systemBindingsDirPath;/leaf-attributes-view.xml#leaf-attr-view">
        <content>
            <xul:hbox xbl:inherits="attrid" flex="1" class="dcpAttribute double">
                <xul:label anonid="label" class="dcpLabel" xbl:inherits="value=label" />
                <xul:label anonid="separator" class="dcpSeparator" value="&separator;" />
                <xul:textbox anonid="displayValue" class="dcpValue plain" />
            </xul:hbox>
        </content>
    </binding>
    <binding id="money-attr-view" extends="&systemBindingsDirPath;/leaf-attributes-view.xml#leaf-attr-view">
        <content>
            <xul:hbox xbl:inherits="attrid" flex="1" class="dcpAttribute money">
                <xul:label anonid="label" class="dcpLabel" xbl:inherits="value=label" />
                <xul:label anonid="separator" class="dcpSeparator" value="&separator;" />
                <xul:textbox anonid="displayValue" class="dcpValue plain" />
            </xul:hbox>
        </content>
    </binding>
    <!-- Date attributes -->
    <binding id="date-attr-view" extends="&systemBindingsDirPath;/leaf-attributes-view.xml#leaf-attr-view">
        <content>
            <xul:hbox xbl:inherits="attrid" flex="1" class="dcpAttribute date">
                <xul:label anonid="label" class="dcpLabel" xbl:inherits="value=label" />
                <xul:label anonid="separator" class="dcpSeparator" value="&separator;" />
                <xul:textbox anonid="displayValue" class="dcpValue plain" />
            </xul:hbox>
        </content>
    </binding>
    <!-- Relation attributes -->
    <binding id="docid-attr-view" extends="&systemBindingsDirPath;/leaf-attributes-view.xml#leaf-attr-view">
        <content>
            <xul:hbox xbl:inherits="attrid" flex="1" class="dcpAttribute docid">
                <xul:label anonid="label" class="dcpLabel" xbl:inherits="value=label" />
                <xul:label anonid="separator" class="dcpSeparator" value="&separator;" />
                <xul:label anonid="displayValue" class="dcpValue" />
            </xul:hbox>
        </content>
        <implementation>
            <constructor><![CDATA[
            Components.utils.import("resource://modules/formater.jsm");
            Components.utils.import("resource://modules/docManager.jsm");
            var valueNode = this.getChild('displayValue');
            
            var docid=this.getValue();
            var title=formater.getDocumentTitle({initid:docid});
            valueNode.value=title;
            try {
            var rdoc=docManager.getLocalDocument({initid:docid});
            if (rdoc) {
              valueNode.setAttribute('onclick',"tryToOpenDocument({documentId:"+docid+"})");
              valueNode.className+=' link';
            }
            } catch (e) {}
            
            ]]>
            </constructor>
        </implementation>
    </binding>
    <!-- file attributes -->
    <binding id="file-attr-view" extends="&systemBindingsDirPath;/leaf-attributes-view.xml#leaf-attr-view">
        <content>
            <xul:hbox xbl:inherits="attrid" flex="1" class="dcpAttribute docid">
                <xul:label anonid="label" class="dcpLabel" xbl:inherits="value=label" />
                <xul:label anonid="separator" class="dcpSeparator" value="&separator;" />
                <xul:label anonid="fileName" class="dcpValue plain" value="FILE NOT YET IMPLEMENTED" />
            </xul:hbox>
        </content>
        <implementation>
            <field name="fileName"><![CDATA[
                this.getChild('fileName');
            ]]></field>
            <method name="openFile">
                <body><![CDATA[
                    Components.utils.import("resource://modules/fileManager.jsm");
                    fileManager.openFile({
                        initid: this.doc.getInitid(),
                        attrid: this.attrid,
                        index: this.getAttribute('index')
                    });
                ]]></body>
            </method>
            <constructor><![CDATA[
            Components.utils.import("resource://modules/formater.jsm");
            Components.utils.import("resource://modules/docManager.jsm");
            Components.utils.import("resource://modules/fileManager.jsm");
                Components.utils.import("resource://modules/logger.jsm");
            var valueNode = this.getChild('fileName');
            var docid=this.doc.getInitid();
            var lfile=fileManager.getFile({initid:docid, attrid:this.attrid, index:this.getAttribute('index')});
            if (lfile) {
                var title=lfile.leafName;
                valueNode.value=title;
                valueNode.className+=' link';
            }
            
            ]]>
            </constructor>
        </implementation>
        <handlers>
            <handler event="click" button="0"><![CDATA[
               
                if(event.originalTarget == this.fileName){
                    this.openFile();
                }
            ]]></handler>
        </handlers>
    </binding>
    <binding id="image-attr-view" extends="&systemBindingsDirPath;/leaf-attributes-view.xml#leaf-attr-view">
        <content>
            <xul:hbox xbl:inherits="attrid" flex="1" class="dcpAttribute image">
                <xul:label anonid="label" class="dcpLabel" xbl:inherits="value=label" />
                <xul:label anonid="separator" class="dcpSeparator" value="&separator;" />
                <xul:image anonid="imageField" class="dcpValue" title="FILE NOT YET IMPLEMENTED" />
            </xul:hbox>
        </content>
        <implementation>
            <field name="imageField"><![CDATA[
                this.getChild('imageField');
            ]]></field>
            <method name="openFile">
                <body><![CDATA[
                    Components.utils.import("resource://modules/fileManager.jsm");
                    fileManager.openFile({
                        initid: this.doc.getInitid(),
                        attrid: this.attrid,
                        index: this.index
                    });
                ]]></body>
            </method>
            <constructor><![CDATA[
            
                Components.utils.import("resource://modules/formater.jsm");
                Components.utils.import("resource://modules/fileManager.jsm");
                
                var valueNode = this.getChild('fileName');
                var lfile=fileManager.getFile({
                    initid:this.doc.getInitid(),
                    attrid:this.attrid,
                    index:this.index
                });
                if (lfile) {
                    this.imageField.tooltipText = lfile.leafName;
                    this.imageField.src=formater.getURI({file:lfile}).spec;
                }
            ]]>
            </constructor>
        </implementation>
        <handlers>
            <handler event="click" button="0"><![CDATA[
               
                if(event.originalTarget == this.fileName){
                    this.openFile();
                }
            ]]></handler>
           
        </handlers>
    </binding>
   
</bindings>